.TH "AUSEARCH_ADD_ITEM" "3" "Feb 2007" "Red Hat" "Linux Audit API"
.SH NAME
ausearch_add_item \- build up search rule
.SH "SYNOPSIS"
.B #include <auparse.h>
.sp
int ausearch_add_item(auparse_state_t *au, const char *field, const char *op, const char *value, ausearch_rule_t how);

.SH "DESCRIPTION"

ausearch_add_item adds one search condition to the audit search API. The search conditions can then be used to scan logs, files, or buffers for something of interest. The field value is the field name that the value will be checked for. The op variable describes what kind of check is to be done. Legal op values are:

.RS
.TP
.I "exists"
 just check that a field name exists
.TP
.I "="
 locate the field name and check that the value associated with it is equal to the value given in this rule.
.TP
.I "!="
 locate the field name and check that the value associated with it is NOT equal to the value given in this rule.
.RE

The how value determines how this search condition will be stored internally. The possible values are:
.RS
.TP
.I AUSEARCH_RULE_CLEAR
When this is used, it clears any previous search condition and inserts it as the first one.
.TP
.I AUSEARCH_RULE_OR
When this is used, it means that the results of its evaluation will be "or"ed with other search conditions.
.TP
.I AUSEARCH_RULE_AND
When this is used, it means that the results of its evaluation will be "and"ed with other search conditions.
.RE

All search conditions must be the same type, you cannot mix "and" and "or".

.SH "RETURN VALUE"

Returns -1 if an error occurs; otherwise, 0 for success.

.SH "SEE ALSO"

.BR ausearch_add_regex (3), 
.BR ausearch_set_stop (3), 
.BR ausearch_clear (3), 
.BR ausearch_next_event (3).

.SH AUTHOR
Steve Grubb
